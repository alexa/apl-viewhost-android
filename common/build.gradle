/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 28
    ndkVersion "23.0.7599858"
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        externalNativeBuild {
            cmake {
                cppFlags ""
                targets "common-jni"
            }
            ndk {
                // Specifies the ABI configurations for the native libraries
                // that Gradle will build and package with the APK.
                abiFilters 'x86', 'armeabi-v7a', 'arm64-v8a'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            version "3.10.2"
            path "CMakeLists.txt"
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.test.ext:junit:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                pom {
                    description = 'Commits: APLViewhostAndroid=' + System.env.CODEBUILD_RESOLVED_SOURCE_VERSION +
                            ',APLCoreEngine=' + System.env.CORE_SOURCE_VERSION
                }
            }
        }
    }
}

task release(dependsOn: ['build', 'publish']) {
    doLast {
        copy {
            from 'build/outputs/aar'
            into '../build/common'
        }
    }
}